#!/usr/bin/python

import os
import shlex
import shutil
import subprocess
import sys
import time

IGNORED_STATUSES = ["up to date", "unwatched"]
MAX_SYNCING_FILES_TO_SHOW = 20

def get_list_of_syncing_files():
    base_dir = os.path.join(os.path.expanduser("~"), "Dropbox")
    os.chdir(base_dir)
    (_, final_out) = get_list_of_syncing_files_internal(["."], [])
    return final_out

def get_list_of_syncing_files_internal(queue, output):
    if len(queue) == 0:
        return (queue, output)
    if len(output) >= MAX_SYNCING_FILES_TO_SHOW:
        return (queue, output)
    cur = queue.pop()
    contents = os.listdir(cur)
    # If there are no contents, just add this director to our output
    if len(contents) == 0:
        output.append(cur)
        #print(cur, end="", flush=True)
        return get_list_of_syncing_files_internal(queue, output)
    cmd = "dropbox filestatus " + " ".join(["'" + cur + "/" + c + "'" for c in contents])
    try:
        lines = subprocess.check_output(shlex.split(cmd)).decode().split("\n")
    except subprocess.CalledProcessError as e:
        print("Oops: " + str(e))
        lines = []
    added_further_el = False
    for l in lines:
        l = l.strip()
        if l == "":
            continue
        relevant = True
        for i in IGNORED_STATUSES:
            if l.endswith(i):
                relevant = False
        if relevant:
            what = l.split(":")[0]
            if os.path.exists(what) and os.path.isdir(what):
                queue.append(what)
            else:
                output.append(what)
                if len(output) >= MAX_SYNCING_FILES_TO_SHOW:
                    return (queue, output)
            added_further_el = True
    if not added_further_el:
        # We don't know any further about this folder. Just show it as syncing.
        output.append(cur)
        #print(cur, end="", flush=True)
    return get_list_of_syncing_files_internal(queue, output)

def print_file_list(li):
    for l in li:
        print("\t" + l)

first_time = True
while True:
    try:
        # Keep updating this, terminal may be resized.
        cols = shutil.get_terminal_size().columns

        msg = subprocess.check_output(["dropbox", "status"]).decode("utf-8")
        lines = msg.split("\n")

        lines = [l for l in lines if l.strip() != ""]

        sys.stdout.write("\r")
        to_write = " - ".join(lines)
        if len(to_write) > cols:
            to_write = to_write[: cols - 3] + "..."
        sys.stdout.write(to_write)
        sys.stdout.write(" " * (cols - len(to_write)))
        files = get_list_of_syncing_files()
        files_to_show = []
        for f in files:
            # Each file will start with "./"
            trimmed = f[2:]
            if trimmed != "":
                files_to_show.append(trimmed)
        if len(files_to_show) > 0:
            print_file_list(sorted(files_to_show))
            print("")
        time.sleep(0.3)
    except KeyboardInterrupt:
        sys.exit(0)
