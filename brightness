#!/usr/bin/python3

import os
import sys
import util

INCREMENT = 100

from optparse import OptionParser

parser = OptionParser()
parser.add_option("-d", "--daemon", dest="daemon",
                  action="store_true",
                  help="Daemon mode, can't use sudo")
(options, args) = parser.parse_args()

max_brightness_file = "/sys/class/backlight/intel_backlight/max_brightness"
cur_brightness_file = "/sys/class/backlight/intel_backlight/brightness"

hardware_enabled = os.path.exists(max_brightness_file) and os.path.exists(cur_brightness_file)

if len(args) == 0:
  if hardware_enabled:
    max_brightness = int(open(max_brightness_file).read().strip())
    cur_brightness = int(open(cur_brightness_file).read().strip())
    print("Current: " + str(cur_brightness) + " / " + str(max_brightness))
  else:
    (current, id) = util.get_current_brightness_and_display_id()
    print("Current: " + str(current))
  sys.exit(0)

up = (args[0] == "u")

can_sudo = not options.daemon

if can_sudo and hardware_enabled:
  max_brightness = int(open(max_brightness_file).read().strip())
  cur_brightness = int(open(cur_brightness_file).read().strip())
  new = cur_brightness
  if up and cur_brightness < max_brightness:
      new = min(max_brightness, cur_brightness + INCREMENT)
  if not up and cur_brightness > 0:
      new = max(0, cur_brightness - INCREMENT)
  os.system("echo '" + str(new) +  "' | sudo tee -a " + cur_brightness_file)
else:
  # Use xrandr as a fallback
  (current, id) = util.get_current_brightness_and_display_id()
  new = current
  if up and current < 1.0:
    new = current + 0.1
  if not up and current > 0.0:
    new = current - 0.1
  os.system("xrandr --output " + id + " --brightness " + str(new))

