#!/usr/bin/python3

import chardet
import os
import re
import subprocess
import util

def get_title(ids):
  for line in ids.split("\n"):
    if line.startswith("TIT") or line.startswith("TT2") or line.startswith("TIT2"):
      return line.split(":", 1)[1].strip()
  return None

def get_date(ids):
  for line in ids.split("\n"):
    if line.startswith("TDAT"):
      thedate = line.split(":", 1)[1].strip()
      dateparts = thedate.split(".")
      # Reverse the date format.
      return ".".join([dateparts[2], dateparts[1], dateparts[0]])  
  return None

home = os.path.expanduser("~")
podcasts_dir = os.path.join(home, "Dropbox", "mobile", "in_progress", "podcasts")

os.chdir(podcasts_dir)
util.run_bin_cmd("sanitizefilenames", "*")
os.system("find . -name '*conflicted*' -delete")
os.system("rm -rf *Conflict*")

folders = sorted([d for d in os.listdir(".") if os.path.isdir(d) and not d.startswith(".")])

for f in folders:
  os.chdir(f)
  seen_durations = []
  seen_md5 = []
  episodes = sorted([f for f in os.listdir() if f.endswith(".mp3")])

  for e in episodes:
    date_prefix = util.get_date_prefix()
    # If the file already has a date prefix, preserve it
    if re.match("^\d\d\d\d\.\d\d\.\d\d", e) is not None:
      date_prefix = e[:10]
    main_part = "unkwn"
    duration_part = "unkwn"
    ids = subprocess.check_output(["id3v2", "-l", e])
    try:
      ids = ids.decode(chardet.detect(ids)['encoding'])
    except UnicodeDecodeError:
      ids = ""
    if "no id3 tags" not in ids.lower() and ids != "":
      date = get_date(ids)
      if date:
        date_prefix = date
      title = get_title(ids)
      if title:
        main_part = util.sanitize_for_filename(title)
      duration = subprocess.check_output(
        ["mp3info", "-p", "'%m:%s\n'", e]).decode("utf-8")
      duration = duration.replace("'", "").replace(":", "m").strip()
      duration_part = duration
      md5 = subprocess.check_output(["md5sum", e]).decode("utf-8").split(" ")[0]
      if duration not in seen_durations:
        seen_durations.append(duration)
      if md5 in seen_md5:
        #print("Deleting " + e + ", md5 matches another episode")
        os.system("rm " + e)
      else:
        seen_md5.append(md5)
    final_name = "_".join([date_prefix, main_part, duration_part]) + ".mp3"
    if e != final_name:
      command = "mv '" + e + "' '" + final_name + "'"
      os.system(command)
  if "matins" in f.lower():
    if len(episodes) > 1:
      cmd = "rm " + " ".join(["'" + e + "'" for e in episodes[:-1]])
      os.system(cmd)

  os.chdir("..")
  if len(episodes) == 0:
    os.system("rmdir '" + f + "'")

os.chdir(".LOG")
log_files = [f for f in os.listdir(".")]
for l in log_files:
  if "conflict" in l:
    os.system('rm "' + l + '"')
os.chdir("..")
