#!/usr/bin/python3

import mailbox
import os
import sys

def is_mail_dir(d):
    return "cur" in os.listdir(d)

def maildir_for_single_mail(mail_path):
    path_parts = mail_path.split(os.sep)
    current_path = os.sep.join(path_parts[:-1])
    i = 1
    while i < len(path_parts) - 1:
        current_path = os.sep.join(path_parts[:-i])
        print("Looking for mail dir at " + current_path)
        if is_mail_dir(current_path):
            return mailbox.Maildir(current_path, factory=None)
        i += 1
    return None

def get_single_mail_object(maildir, mail_path):
    look_for = mail_path.split("/")[-1].split(":")[0]
    print("Look for " + look_for)
    for key in maildir.iterkeys():
        print(key)
        if key == look_for:
            print("Found")
            return maildir[key]
    print("I couldn't find mail " + mail_path + " in " + str(maildir))
    return None

def detach_from_mail_in_maildir(mail, maildir, out_path_prefix):
    print("Detaching attachments...")
    maildir.lock()
    for message_part in mail.walk():
        main_type = message_part.get_content_maintype()
        print("Found type " + main_type)
        if main_type in ["text", "multipart"]:
            continue
        attachment_filename = message_part.get_filename()
        if not attachment_filename:
            print("Hmm, this attachment doesn't have a file name, skipping")
            continue
        output_path = os.path.join(out_path_prefix, attachment_filename)
        print("Saving attachment to '" + output_path + "'...")
        with open(output_path, "wb") as f:
            f.write(message_part.get_payload(decode = 1))
            f.close()
    maildir.flush()
    maildir.close()

if __name__ == "__main__":
    IN_MAIL_PATH = sys.argv[1]
    MAILDIR = maildir_for_single_mail(IN_MAIL_PATH)
    MAIL = get_single_mail_object(MAILDIR, IN_MAIL_PATH)
    detach_from_mail_in_maildir(MAIL, MAILDIR, os.getcwd())
