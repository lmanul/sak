#!/usr/bin/python3

import os
import re
import shlex
import subprocess
import sys

TRACK_ID_REGEXP = r"Track\s+ID\s+(.+)\:\s+.*"

def remove_tracks_by_id(ids, new_file, bup_file):
    print("Removing tracks " + ids)
    option = "!" + ",".join([i for i in ids])
    cmd = "mkvmerge -o " + new_file + " --audio-tracks " + option + " " + bup_file
    print(cmd)
    os.system(cmd)

def remove_tracks_by_number(numbers, info, new_file, bup_file):
    audio_track_numbers = []
    for l in info.split("\n"):
        if l.startswith("Track ID") and "audio" in l:
            audio_track_numbers.append(int(re.match(TRACK_ID_REGEXP, l).group(1)))

    print("Audio tracks: " + str(audio_track_numbers))

    for n in numbers:
        if n not in audio_track_numbers:
            print("Sorry, track " + str(n) + " is not in the track list")
            sys.exit(1)

    print("Removing tracks #" + str(numbers))
    option = "!" + ",".join([str(i) for i in numbers])
    cmd = "mkvmerge -o " + new_file + " --audio-tracks " + option + " " + bup_file
    print(cmd)
    os.system(cmd)

def main():
    input_file = sys.argv[1]
    info = subprocess.check_output(shlex.split("mkvmerge -i " + input_file)).decode()
    if len(sys.argv) < 3:
        print("Give me at least one track to remove. Here is the list: " + str(info))
        sys.exit(1)

    bup = input_file + ".bup"
    os.system("mv " + input_file + " " + bup)

    if sys.argv[2].isdigit():
        track_numbers = [int(arg) for arg in sys.argv[2:]]
        remove_tracks_by_number(track_numbers, info, input_file, bup)
    else:
        track_ids = sys.argv[2:]
        remove_tracks_by_id(track_ids, input_file, bup)

if __name__ == "__main__":
    main()





